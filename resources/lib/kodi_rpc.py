
from typing import Any, Dict, Tuple
import json

import xbmc

sequence = 0

def do_rpc(method: str, params: Dict) -> Tuple[bool, Any]:
    global sequence
    jsonrpc = {
        "jsonrpc": "2.0",
        "id": sequence,
        "method": method,
        "params": params
    }
    sequence += 1
    response = xbmc.executeJSONRPC(json.dumps(jsonrpc))
    return json.loads(response) if "result" in response else None

def get_item_info():
    result = do_rpc("Player.GetItem", {"playerid": 1,
                                       "properties": [
                                        #    "title",
                                        #    "artist",
                                        #    "albumartist",
                                        #    "genre",
                                        #    "year",
                                        #    "rating",
                                        #    "album",
                                        #    "track",
                                        #    "duration",
                                        #    "comment",
                                        #    "lyrics",
                                        #    "musicbrainztrackid",
                                        #    "musicbrainzartistid",
                                        #    "musicbrainzalbumid",
                                        #    "musicbrainzalbumartistid",
                                        #    "playcount",
                                        #    "fanart",
                                        #    "director",
                                        #    "trailer",
                                        #    "tagline",
                                        #    "plot",
                                        #    "plotoutline",
                                        #    "originaltitle",
                                        #    "lastplayed",
                                        #    "writer",
                                        #    "studio",
                                        #    "mpaa",
                                        #    "cast",
                                        #    "country",
                                        #    "imdbnumber",
                                        #    "premiered",
                                        #    "productioncode",
                                        #    "runtime",
                                        #    "set",
                                        #    "showlink",
                                        #    "streamdetails",
                                        #    "top250",
                                        #    "votes",
                                        #    "firstaired",
                                        #    "season",
                                        #    "episode",
                                           "showtitle",
                                        #    "thumbnail",
                                        #    "file",
                                        #    "resume",
                                        #    "artistid",
                                        #    "albumid",
                                           "tvshowid",
                                        #    "setid",
                                        #    "watchedepisodes",
                                        #    "disc",
                                        #    "tag",
                                        #    "art",
                                        #    "genreid",
                                        #    "displayartist",
                                        #    "albumartistid",
                                        #    "description",
                                        #    "theme",
                                        #    "mood",
                                        #    "style",
                                        #    "albumlabel",
                                        #    "sorttitle",
                                        #    "episodeguide",
                                        #    "uniqueid",
                                        #    "dateadded",
                                        #    "channel",
                                        #    "channeltype",
                                        #    "hidden",
                                        #    "locked",
                                        #    "channelnumber",
                                        #    "subchannelnumber",
                                        #    "starttime",
                                        #    "endtime",
                                        #    "specialsortseason",
                                        #    "specialsortepisode",
                                        #    "compilation",
                                        #    "releasetype",
                                        #    "albumreleasetype",
                                        #    "contributors",
                                        #    "displaycomposer",
                                        #    "displayconductor",
                                        #    "displayorchestra",
                                        #    "displaylyricist",
                                        #    "userrating",
                                        #    "sortartist",
                                        #    "musicbrainzreleasegroupid",
                                        #    "mediapath",
                                        #    "dynpath",
                                        #    "isboxset",
                                        #    "totaldiscs",
                                        #    "disctitle",
                                        #    "releasedate",
                                        #    "originaldate",
                                        #    "bpm",
                                        #    "bitrate",
                                        #    "samplerate",
                                        #    "channels",
                                        #    "albumstatus",
                                        #    "datemodified",
                                        #    "datenew",
                                        #    "customproperties",
                                        #    "albumduration"
                                           ]})
    return result["result"]["item"] if not None else None


def get_properties():
    result = do_rpc("Player.GetProperties", {"playerid": 1,  # TODO figure out if ID 1 is always good or need to request?
                                             "properties": [
                                                 "type",
                                                #  "partymode",
                                                #  "speed",
                                                #  "time",
                                                #  "percentage",
                                                #  "totaltime",
                                                #  "playlistid",
                                                 "position",
                                                #  "repeat",
                                                #  "shuffled",
                                                #  "canseek",
                                                #  "canchangespeed",
                                                #  "canmove",
                                                #  "canzoom",
                                                #  "canrotate",
                                                #  "canshuffle",
                                                #  "canrepeat",
                                                 "currentaudiostream",
                                                 "audiostreams",
                                                 "subtitleenabled",
                                                 "currentsubtitle",
                                                 "subtitles",
                                                #  "live",
                                                #  "currentvideostream",
                                                #  "videostreams",
                                                #  "cachepercentage"
                                             ]})
    return result["result"] if not None else None

